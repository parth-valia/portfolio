1:HL["/_next/static/media/e4af272ccee01ff0-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:HL["/_next/static/css/5ee51269808815ce.css","style"]
0:["F6xYDf0kVE5EO6-TqA8uf",[[["",{"children":["blog",{"children":[["slug","flatlist-performance-playbook","d"],{"children":["__PAGE__?{\"slug\":\"flatlist-performance-playbook\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5ee51269808815ce.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":78800,"chunks":["916:static/chunks/916-d2fcfa33d65fddad.js","962:static/chunks/962-e2d6eb8f0049b94b.js","185:static/chunks/app/layout-83cd0b45a14d6400.js"],"name":"ThemeProvider","async":false}
6:I{"id":16628,"chunks":["916:static/chunks/916-d2fcfa33d65fddad.js","962:static/chunks/962-e2d6eb8f0049b94b.js","185:static/chunks/app/layout-83cd0b45a14d6400.js"],"name":"FirstVisitProvider","async":false}
7:I{"id":81014,"chunks":["916:static/chunks/916-d2fcfa33d65fddad.js","962:static/chunks/962-e2d6eb8f0049b94b.js","185:static/chunks/app/layout-83cd0b45a14d6400.js"],"name":"SmoothScroll","async":false}
8:I{"id":46655,"chunks":["916:static/chunks/916-d2fcfa33d65fddad.js","962:static/chunks/962-e2d6eb8f0049b94b.js","185:static/chunks/app/layout-83cd0b45a14d6400.js"],"name":"Header","async":false}
9:I{"id":31170,"chunks":["916:static/chunks/916-d2fcfa33d65fddad.js","962:static/chunks/962-e2d6eb8f0049b94b.js","185:static/chunks/app/layout-83cd0b45a14d6400.js"],"name":"PageTransition","async":false}
a:I{"id":81443,"chunks":["272:static/chunks/webpack-3c1e253ccb9db06e.js","971:static/chunks/fd9d1056-cefb151aeb9eeb06.js","864:static/chunks/864-4a2eeddb069cea2a.js"],"name":"","async":false}
b:I{"id":18639,"chunks":["272:static/chunks/webpack-3c1e253ccb9db06e.js","971:static/chunks/fd9d1056-cefb151aeb9eeb06.js","864:static/chunks/864-4a2eeddb069cea2a.js"],"name":"","async":false}
d:I{"id":24909,"chunks":["916:static/chunks/916-d2fcfa33d65fddad.js","691:static/chunks/691-2bddc646600b8c91.js","308:static/chunks/app/blog/[slug]/page-b44cc27453af7f6c.js"],"name":"","async":false}
f:I{"id":5702,"chunks":["916:static/chunks/916-d2fcfa33d65fddad.js","962:static/chunks/962-e2d6eb8f0049b94b.js","185:static/chunks/app/layout-83cd0b45a14d6400.js"],"name":"Footer","async":false}
10:I{"id":49780,"chunks":["916:static/chunks/916-d2fcfa33d65fddad.js","962:static/chunks/962-e2d6eb8f0049b94b.js","185:static/chunks/app/layout-83cd0b45a14d6400.js"],"name":"Toaster","async":false}
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Parth Valia - React Native Developer"}],["$","meta","2",{"name":"description","content":"Professional React Native developer with 2.8+ years of experience building exceptional mobile applications."}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","4",{"rel":"icon","href":"/favicon.ico"}],["$","meta","5",{"name":"next-size-adjust"}]]
e:T5e9,# Why FlatList performance matters

Large lists are common in production apps (feeds, catalogs, chats). Poor list hygiene causes jank, input latency, and memory spikes. This guide documents a practical checklist, measured on mid-range Android devices and older iOS hardware.

## Baseline & methodology
- Enable Performance Monitor (FPS/JS) and sample interactions (scroll, tap, pull-to-refresh).
- Record Flamegraphs with Hermes profiling and Android Studio profiler.
- Capture memory snapshots before/after interactions.

## Virtualization & windowing
- Prefer windowSize = 5â€“9 for content-heavy rows; reduce for lightweight rows.
- Set initialNumToRender to the minimum to fill the viewport + 1 row.
- Use removeClippedSubviews on Android to lower memory pressure in long lists.

## Layout calculations
- Implement getItemLayout for constant-height rows to avoid expensive layout passes.
- For variable heights, precompute approximate heights or use sectioned virtualization.

## Stable keys & rendering purity
- Always provide a stable, unique keyExtractor.
- Memoize row components with React.memo and selector-based props.
- Replace inline lambdas/objects with useCallback / useMemo.

## Image & media considerations
- Use thumbnails (progressive loading), cache aggressively, and avoid layout shifts.
- Defer heavy media (video) offscreen; consider intersection observers where possible.

This playbook reduced jank in production apps with 10K+ item feeds, improving user retention and engagement metrics.3:[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":["$","body",null,{"className":"__className_f367f3","children":["$","$L5",null,{"defaultTheme":"dark","children":["$","$L6",null,{"children":[["$","$L7",null,{}],["$","$L8",null,{}],["$","$L9",null,{"children":["$","main",null,{"className":"min-h-screen","children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["slug","flatlist-performance-playbook","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lc",["$","$Ld",null,{"post":{"slug":"flatlist-performance-playbook","title":"FlatList Performance Playbook: Optimizing React Native Lists","summary":"An in-depth, measurement-driven guide to FlatList performance: windowing, getItemLayout, stable keys, memoization, virtualization, and profiling techniques with before/after benchmarks.","excerpt":"An in-depth, measurement-driven guide to FlatList performance: windowing, getItemLayout, stable keys, memoization, virtualization, and profiling techniques with before/after benchmarks.","date":"2024-01-15","tags":["React Native","Performance","FlatList","Optimization"],"coverImage":"/images/blog/flatlist-performance.png","image":"/images/blog/flatlist-performance.png","readingTime":"8 min read","readTime":"8 min read","category":"Performance","content":"$e"}}],null],"segment":"__PAGE__?{\"slug\":\"flatlist-performance-playbook\"}"},"styles":[]}],"segment":["slug","flatlist-performance-playbook","d"]},"styles":[]}],"segment":"blog"},"styles":[]}]}]}],["$","$Lf",null,{}],["$","$L10",null,{}]]}]}]}]}],null]
c:null
